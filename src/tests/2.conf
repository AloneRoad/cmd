worker_processes  4;

pid logs/upload.pid;

events {
  worker_connections  10240;
  use epoll;
}


http {
  upstream request_handlers {
    server 127.0.0.1:8888;
  }
  
  upstream upload_handlers {
    server 127.0.0.1:5000;
  }
  
  server_tokens off;
  include       mime.types;
  default_type  application/octet-stream;

  access_log off;

  sendfile      off;
  tcp_nopush    on;
  tcp_nodelay   on;

  client_body_buffer_size     1K;
  client_header_buffer_size   1k;
  client_max_body_size        1k;
  large_client_header_buffers 2 1k;
  
  client_body_timeout   10;
  client_header_timeout 10;
  keepalive_timeout     5 5;
  send_timeout          10;

  gzip  on;
  gzip_min_length 1000;
  gzip_proxied any;              
  gzip_types text/plain text/css text/xml
             application/x-javascript application/xml
             application/atom+xml text/javascript;
  
  proxy_next_upstream     timeout;
  proxy_connect_timeout   60;

  proxy_temp_path /var/ramdisk/tmp/;
  proxy_cache_key "$scheme://$http_host$request_uri";
  proxy_max_temp_file_size  0;

  proxy_cache_valid   200   600m;
  proxy_cache_valid   404   1m;

  more_clear_headers ETag;
  more_set_headers 'Server: vws';
  expires       max;
  proxy_cache ramdisk;

  server {
    listen       80;
    client_max_body_size 2000M;

    # Upload form should be submitted to this location
    location /upload {
      upload_pass @upload_handlers;
     
      # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
      upload_store /var/ramdisk 1;
       
      upload_store_access user:rw group:rw all:rw;
      upload_cleanup 400 404 499 500-505;
      
      upload_set_form_field $upload_field_name.name "$upload_file_name";
      upload_set_form_field $upload_field_name.content_type "$upload_content_type";
      upload_set_form_field $upload_field_name.temp_file "$upload_tmp_path";
      upload_aggregate_form_field $upload_field_name.md5 "$upload_file_md5";
      upload_aggregate_form_field $upload_field_name.size "$upload_file_size";
    }   
    
    location @upload_handlers {    
      proxy_pass http://upload_handlers;
    } 
    
    ## Proxy download ##
    location ~* ^/dl/(.*?)/(.*) {
      internal;
  
      # Extract download url from the request
      set $download_uri $2;
      set $download_host $1;
  
      # Compose download url
      set $download_url http://$download_host/$download_uri;
  
      # Set download request headers
      proxy_set_header Host $download_host;
      proxy_set_header Authorization '';
      
      # Do not touch local disks when proxying 
      # content to clients
      proxy_max_temp_file_size 0;
  
      # Fixes .fid content-type
      proxy_hide_header Content-Type;
      
      # Download the file and send it to client
      proxy_pass $download_url;
    }
        
    location / {
      proxy_pass_header Server;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_pass http://request_handlers;
    }
  }
}
